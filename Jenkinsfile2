pipeline {
  agent any
  options { skipDefaultCheckout(true) }
  triggers { pollSCM('H/5 * * * *') }

  stages {
    stage('Checkout Jenkinsfile repo') {
      steps { checkout scm }
    }

    stage('Fetch app (nodejs-goof)') {
      steps {
        dir('app') {
          git branch: 'main', url: 'https://github.com/snyk-labs/nodejs-goof.git'
        }
      }
    }

    stage('Install • Test • Coverage • Audit') {
      steps {
        nodejs(nodeJSInstallationName: 'node18') {
          dir('app') {
            sh '''
              node -v
              npm -v
              npm ci || npm install
              npm test || true
              npm run coverage || true
              npm audit || true
            '''
          }
        }
      }
    }
  }

  post {
  success {
    emailext(
      subject: "✅ Jenkins: ${env.JOB_NAME} #${env.BUILD_NUMBER} PASSED",
      body: """Build: ${env.BUILD_URL}
Status: SUCCESS

Job: ${env.JOB_NAME}
Build #: ${env.BUILD_NUMBER}
""",
      to: 'naveenneth1234@gmail.com',
      from: 'naveenneth1234@gmail.com',
      replyTo: 'naveenneth1234@gmail.com',
      attachLog: true,
      compressLog: true,
      // include audit output if present
      attachmentsPattern: 'app/audit.txt,app/coverage/**,app/npm-debug.log'
    )
  }
  failure {
    emailext(
      subject: "❌ Jenkins: ${env.JOB_NAME} #${env.BUILD_NUMBER} FAILED",
      body: """Build: ${env.BUILD_URL}
Status: FAILURE

Please check the console log and attachments.""",
      to: 'naveenneth1234@gmail.com',
      from: 'naveenneth1234@gmail.com',
      replyTo: 'naveenneth1234@gmail.com',
      attachLog: true,
      compressLog: true,
      attachmentsPattern: 'app/audit.txt,app/coverage/**,app/npm-debug.log'
    )
  }
  always {
    archiveArtifacts artifacts: 'app/audit.txt,app/coverage/**,app/npm-debug.log', allowEmptyArchive: true
  }
}

}
